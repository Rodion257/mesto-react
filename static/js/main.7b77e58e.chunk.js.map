{"version":3,"sources":["components/Header.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/PopupWithImage.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","headerLogo","alt","api","baseUrl","headers","this","url","fetch","then","res","ok","json","Promise","reject","status","data","method","body","JSON","stringify","name","userName","about","userDescription","link","_id","avatar","authorization","Card","props","onClick","onImageOpen","onCardClick","card","type","likes","length","Main","React","useState","setUserName","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getInfoUser","catch","err","console","log","getInitialCards","result","onEditAvatar","onEditProfile","onAddPlace","map","key","onImagePopup","Footer","PopupWithForm","isOpen","noValidate","onClose","title","children","disabled","button","PopupWithImage","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","closeAllPopups","autoComplete","id","minLength","maxLength","required","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.7b77e58e.chunk.js","sourcesContent":["import React from 'react';\r\nimport headerLogo from '../images/logo.svg'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={headerLogo} alt=\"Лого Место\" className=\"header__logo\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","class Api {\r\n    constructor({ baseUrl, headers = {} }) {\r\n        this.url = baseUrl;\r\n        this.headers = headers;\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this.url}/cards`, {\r\n            headers: this.headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    getInfoUser() {\r\n        return fetch(`${this.url}/users/me`, {\r\n            headers: this.headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    sendInfoUser(data) {\r\n        return fetch(`${this.url}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: data.userName,\r\n                about: data.userDescription\r\n            })\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    createCard(data) {\r\n        return fetch(`${this.url}/cards`, {\r\n            method: 'POST',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                link: data.link\r\n            })\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    removeCard(data) {\r\n        return fetch(`${this.url}/cards/${data._id}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    setLike(data) {\r\n        return fetch(`${this.url}/cards/likes/${data._id}`, {\r\n            method: 'PUT',\r\n            headers: this.headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    removeLike(data) {\r\n        return fetch(`${this.url}/cards/likes/${data._id}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    changeAvatar(data) {\r\n        return fetch(`${this.url}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                avatar: data.link\r\n            })\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\r\n    headers: {\r\n        authorization: 'dc1735db-20ec-4583-a516-d92fba380f3a',\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport default api;","import React from 'react';\r\n\r\nfunction Card(props) {\r\n// console.log(props.card.link);\r\n    function handleClick() {\r\n        props.onImageOpen();\r\n        props.onCardClick(props.card);\r\n    }\r\n\r\n    return (\r\n        <figure className=\"cards__item\">\r\n            <img onClick={handleClick} src={props.card.link} alt={`${props.card.name}`} className=\"cards__image\" />\r\n            <button className=\"cards__delete-button\" />\r\n            <figcaption className=\"cards__name\">\r\n                <p className=\"cards__name-caption\">{props.card.name}</p>\r\n                <div className=\"cards__like\">\r\n                    <button type=\"button\" className=\"cards__like-button\" />\r\n                    <p className=\"cards__like-counter\">{props.card.likes.length}</p>\r\n                </div>\r\n            </figcaption>\r\n        </figure>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport api from '../utils/Api';\r\nimport Card from './Card';\r\n\r\nfunction Main(props) {\r\n\r\n    const [userName, setUserName] = React.useState('');\r\n    const [userDescription, setUserDescription] = React.useState();\r\n    const [userAvatar, setUserAvatar] = React.useState();\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n    React.useEffect(() => {\r\n        api.getInfoUser()\r\n            .then((data) => {\r\n                setUserName(data.name);\r\n                setUserDescription(data.about);\r\n                setUserAvatar(data.avatar);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        api.getInitialCards()\r\n            .then((result) => {\r\n                setCards(result)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, [cards]);\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            <section className=\"profile\">\r\n                <button onClick={props.onEditAvatar} type=\"button\" className=\"profile__avatar-button\">\r\n                    <img src={userAvatar} alt=\"Аватар\" className=\"profile__avatar\" />\r\n                </button>\r\n                <div className=\"profile__edit-info\">\r\n                    <div className=\"profile__info\">\r\n                        <h1 className=\"profile__name\">{userName}</h1>\r\n                        <button onClick={props.onEditProfile} type=\"button\" className=\"profile__edit-button\"></button>\r\n                    </div>\r\n                    <p className=\"profile__description\">{userDescription}</p>\r\n                </div>\r\n                <button onClick={props.onAddPlace} type=\"button\" className=\"profile__button\"></button>\r\n            </section>\r\n\r\n            <section className=\"cards\">\r\n                {cards.map((card) => (\r\n                    <Card key={card._id} card={card} onImageOpen={props.onImagePopup} onCardClick={props.onCardClick} />\r\n                ))}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__text\">&#169; 2020 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <section className={`popup popup_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\r\n            <form name={props.name} className=\"popup__container\" noValidate>\r\n                <button onClick={props.onClose} type=\"reset\" className=\"popup__close-button\" />\r\n                <h2 className=\"popup__header\">{props.title}</h2>\r\n                {props.children}\r\n                <button type=\"submit\" className=\"popup__save-button popup__save-button_disabled\" disabled>{props.button}</button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction PopupWithImage(props) {\r\n    return (\r\n        <section className={`popup popup_image_open ${props.isOpen ? 'popup_opened' : ''}`}>\r\n            <figure className=\"popup__image-container\">\r\n                <button onClick={props.onClose} className=\"popup__close-button popup__close-button_image_close\" />\r\n                <img className=\"popup__image\" src={`${props.card.link}`} alt={props.card.name} />\r\n                <figcaption className=\"popup__caption\"></figcaption>\r\n            </figure>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PopupWithImage;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm'\nimport PopupWithImage from './PopupWithImage'\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState('');\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n\n  function handleImagePopupclick() {\n    setIsImagePopupOpen(!isImagePopupOpen);\n  }\n\n  function handleCardClick(selectedCard) {\n    setSelectedCard(selectedCard);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n  }\n\n  return (\n\n    <div className=\"App\">\n      <div className=\"page\">\n        <Header />\n        <Main onCardClick={handleCardClick} onImagePopup={handleImagePopupclick} onEditProfile={handleEditProfileClick} onEditAvatar={handleEditAvatarClick} onAddPlace={handleAddPlaceClick} />\n        <Footer />\n      </div>\n\n      <PopupWithForm title='Редактировать профиль' name=\"profile_edit\" button='Сохранить' isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} >\n        <input autoComplete=\"off\" id=\"user-name\" type=\"text\" name=\"userName\" className=\"popup__input popup__input_value_name\"\n          minLength=\"2\" maxLength=\"40\" required />\n        <span id=\"user-name-error\" className=\"popup__error popup__error_position_top\"></span>\n        <input autoComplete=\"off\" id=\"user-description\" type=\"text\" name=\"userDescription\"\n          className=\"popup__input popup__input_value_description\" minLength=\"2\" maxLength=\"200\" required />\n        <span id=\"user-description-error\" className=\"popup__error popup__error_position_bottom\"></span>\n      </PopupWithForm>\n\n      <PopupWithForm title='Новое место' name=\"card_add\" button='Создать' isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n        <input autoComplete=\"off\" id=\"card-name\" type=\"text\" name=\"name\" placeholder=\"Название\"\n          className=\"popup__input popup__input_place_name\" minLength=\"1\" maxLength=\"30\" required />\n        <span id=\"card-name-error\" className=\"popup__error popup__error_position_top\"></span>\n        <input autoComplete=\"off\" id=\"card-url\" type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\"\n          className=\"popup__input popup__input_place_image\" required />\n        <span id=\"card-url-error\" className=\"popup__error popup__error_position_bottom\"></span>\n      </PopupWithForm>\n\n      <PopupWithImage card={selectedCard} isOpen={isImagePopupOpen} onClose={closeAllPopups} />\n\n      <PopupWithForm title='Вы уверены?' name=\"delete_confirm\" button='Да' />\n\n      <PopupWithForm title='Обновить аватар' name=\"avatar_edit\" button='Сохранить' isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n        <input autoComplete=\"off\" id=\"avatar-url\" type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\"\n          className=\"popup__input popup__input_place_image\" required />\n        <span id=\"avatar-url-error\" className=\"popup__error popup__error_position_bottom\"></span>\n      </PopupWithForm>\n\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}