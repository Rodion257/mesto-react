{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/PopupWithImage.js","components/EditProfilePopup.js","utils/api.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","headerLogo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onClick","onImageOpen","onCardClick","link","name","type","onCardDelete","onCardLike","length","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","key","onImagePopup","Footer","PopupWithForm","isOpen","onSubmit","noValidate","onClose","title","children","button","PopupWithImage","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","value","onChange","target","autoComplete","id","minLength","maxLength","required","api","baseUrl","headers","this","url","fetch","then","res","ok","json","Promise","reject","status","data","method","body","JSON","stringify","authorization","EditAvatarPopup","avatarRef","useRef","onUpdateAvatar","current","ref","placeholder","AddPlacePopup","setLink","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","getInitialCards","result","catch","err","console","log","getInfoUser","Provider","changeLikeCardStatus","newCard","newCards","c","removeCard","arrWithoutCard","filter","user","sendInfoUser","createCard","changeAvatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"2PAWeA,MARf,WACI,OACI,4BAAQC,UAAU,UACd,yBAAKC,IAAKC,IAAYC,IAAI,0DAAaH,UAAU,mBCJhDI,EAAqBC,IAAMC,gBCoDzBC,MAnDf,SAAcC,GACV,IAAMC,EAAcJ,IAAMK,WAAWN,GAG/BO,EAAQH,EAAMI,KAAKC,MAAMC,MAAQL,EAAYK,IAG7CC,EAAyB,+BACHJ,EAAQ,8BAAgC,IAI9DK,EAAUR,EAAMI,KAAKK,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQL,EAAYK,OAG3DM,EAAuB,6BACHJ,EAAU,4BAA8B,IAgBlE,OACI,4BAAQhB,UAAU,eACd,yBACIqB,QAhBZ,WACIb,EAAMc,cACNd,EAAMe,YAAYf,EAAMI,OAehBX,IAAKO,EAAMI,KAAKY,KAChBrB,IAAG,UAAKK,EAAMI,KAAKa,MACnBzB,UAAU,iBACd,4BAAQ0B,KAAK,SAASL,QAX9B,WACIb,EAAMmB,aAAanB,EAAMI,OAU6BZ,UAAWe,IAC7D,gCAAYf,UAAU,eAClB,uBAAGA,UAAU,uBAAuBQ,EAAMI,KAAKa,MAC/C,yBAAKzB,UAAU,eACX,4BAAQ0B,KAAK,SAASL,QAnBtC,WACIb,EAAMoB,WAAWpB,EAAMI,OAkBqCZ,UAAS,WAAMoB,KAC/D,uBAAGpB,UAAU,uBAAuBQ,EAAMI,KAAKK,MAAMY,YCR1DC,MAnCf,SAActB,GAEV,IAAMC,EAAcJ,IAAMK,WAAWN,GAErC,OACI,0BAAMJ,UAAU,QACZ,6BAASA,UAAU,WACf,4BAAQqB,QAASb,EAAMuB,aAAcL,KAAK,SAAS1B,UAAU,0BACzD,yBAAKC,IAAKQ,EAAYuB,OAAQ7B,IAAI,uCAASH,UAAU,qBAEzD,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,iBAAiBS,EAAYgB,MAC3C,4BAAQJ,QAASb,EAAMyB,cAAeP,KAAK,SAAS1B,UAAU,0BAElE,uBAAGA,UAAU,wBAAwBS,EAAYyB,QAErD,4BAAQb,QAASb,EAAM2B,WAAYT,KAAK,SAAS1B,UAAU,qBAG/D,6BAASA,UAAU,SACdQ,EAAM4B,MAAMC,KAAI,SAACzB,GAAD,OACb,kBAAC,EAAD,CACI0B,IAAK1B,EAAKE,IACVF,KAAMA,EACNU,YAAad,EAAM+B,aACnBhB,YAAaf,EAAMe,YACnBK,WAAYpB,EAAMoB,WAClBD,aAAcnB,EAAMmB,qBCtB7Ba,MARf,WACI,OACI,4BAAQxC,UAAU,UACd,uBAAGA,UAAU,gBAAb,4BCaGyC,MAhBf,SAAuBjC,GACnB,OACI,6BAASR,UAAS,sBAAiBQ,EAAMiB,KAAvB,YAA+BjB,EAAMkC,OAAS,eAAiB,KAC7E,0BAAMC,SAAUnC,EAAMmC,SACtBlB,KAAMjB,EAAMiB,KAAMzB,UAAU,mBAAmB4C,YAAU,GACrD,4BAAQvB,QAASb,EAAMqC,QAASnB,KAAK,QAAQ1B,UAAU,wBACvD,wBAAIA,UAAU,iBAAiBQ,EAAMsC,OACpCtC,EAAMuC,SACP,4BAAQrB,KAAK,SAAS1B,UAAU,sBAE9BQ,EAAMwC,WCITC,MAdf,SAAwBzC,GACpB,OACI,6BAASR,UAAS,iCAA4BQ,EAAMkC,OAAS,eAAiB,KAC1E,4BAAQ1C,UAAU,0BACd,4BAAQqB,QAASb,EAAMqC,QAAS7C,UAAU,wDAC1C,yBAAKA,UAAU,eACXC,IAAG,UAAKO,EAAMI,KAAKY,MACnBrB,IAAKK,EAAMI,KAAKa,OACpB,gCAAYzB,UAAU,kBAAkBQ,EAAMI,KAAKa,SCNpD,SAASyB,EAAiB1C,GACrC,IAAMC,EAAcJ,IAAMK,WAAWN,GADO,EAEpBC,IAAM8C,SAAS,IAFK,mBAErC1B,EAFqC,KAE/B2B,EAF+B,OAGN/C,IAAM8C,SAAS,IAHT,mBAGrCE,EAHqC,KAGxBC,EAHwB,KAiC5C,OAPAjD,IAAMkD,WAAU,WACQ,KAAhB9C,IACA2C,EAAQ3C,EAAYgB,MACpB6B,EAAe7C,EAAYyB,UAEhC,CAACzB,IAGA,kBAAC,EAAD,CAAeqC,MAAM,4HAAwBrB,KAAK,eAAeuB,OAAO,yDACpEN,OAAQlC,EAAMkC,OACdG,QAASrC,EAAMqC,QACfF,SAxBR,SAAsBa,GAElBA,EAAEC,iBAGFjD,EAAMkD,aAAa,CACfjC,OACAS,MAAOmB,MAkBP,2BAAOM,MAAOlC,EAAMmC,SAjC5B,SAA0BJ,GACtBJ,EAAQI,EAAEK,OAAOF,QAgCmCG,aAAa,MAAMC,GAAG,YAAYrC,KAAK,OAAOD,KAAK,WAAWzB,UAAU,uCACpHgE,UAAU,IAAIC,UAAU,KAAKC,UAAQ,IACzC,0BAAMH,GAAG,kBAAkB/D,UAAU,2CACrC,2BAAO2D,MAAON,EAAaO,SAhCnC,SAAiCJ,GAC7BF,EAAeE,EAAEK,OAAOF,QA+B0CG,aAAa,MAAMC,GAAG,mBAAmBrC,KAAK,OAAOD,KAAK,kBACpHzB,UAAU,8CAA8CgE,UAAU,IAAIC,UAAU,MAAMC,UAAQ,IAClG,0BAAMH,GAAG,yBAAyB/D,UAAU,+C,kBC8FzCmE,EARH,I,WApIR,cAAwC,IAA1BC,EAAyB,EAAzBA,QAAyB,IAAhBC,eAAgB,MAAN,GAAM,sBACnCC,KAAKC,IAAMH,EACXE,KAAKD,QAAUA,E,8DAIf,OAAOG,MAAM,GAAD,OAAIF,KAAKC,IAAT,UAAsB,CAC9BF,QAASC,KAAKD,UAEbI,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,oCAK7C,OAAOP,MAAM,GAAD,OAAIF,KAAKC,IAAT,aAAyB,CACjCF,QAASC,KAAKD,UAEbI,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,mCAIpCC,GACT,OAAOR,MAAM,GAAD,OAAIF,KAAKC,IAAT,aAAyB,CACjCU,OAAQ,QACRZ,QAASC,KAAKD,QACda,KAAMC,KAAKC,UAAU,CACjB3D,KAAMuD,EAAKvD,KACXS,MAAO8C,EAAK9C,UAGfuC,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,iCAItCC,GACP,OAAOR,MAAM,GAAD,OAAIF,KAAKC,IAAT,UAAsB,CAC9BU,OAAQ,OACRZ,QAASC,KAAKD,QACda,KAAMC,KAAKC,UAAU,CACjB3D,KAAMuD,EAAKvD,KACXD,KAAMwD,EAAKxD,SAGdiD,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,iCAItCC,GACP,OAAOR,MAAM,GAAD,OAAIF,KAAKC,IAAT,kBAAsBS,EAAKlE,KAAO,CAC1CmE,OAAQ,SACRZ,QAASC,KAAKD,UAEbI,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,2CA8B5BhB,EAAI/C,GACrB,OAAOwD,MAAM,GAAD,OAAIF,KAAKC,IAAT,wBAA4BR,GAAM,CAC1CkB,OAAO,GAAD,OAAKjE,EAAU,MAAQ,UAC7BqD,QAASC,KAAKD,UAEbI,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,mCAIpCC,GACT,OAAOR,MAAM,GAAD,OAAIF,KAAKC,IAAT,oBAAgC,CACxCU,OAAQ,QACRZ,QAASC,KAAKD,QACda,KAAMC,KAAKC,UAAU,CACjBpD,OAAQgD,EAAKhD,WAGhByC,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAERC,QAAQC,OAAR,gDAA0BJ,EAAIK,gB,KAKzC,CAAQ,CAChBX,QAAS,8CACTC,QAAS,CACLgB,cAAe,uCACf,eAAgB,sBCtIT,SAASC,EAAgB9E,GAEpC,IAAM+E,EAAYlF,IAAMmF,SAUxB,OACI,kBAAC,EAAD,CAAe1C,MAAM,wFAAkBrB,KAAK,cAAcuB,OAAO,yDAC7DN,OAAQlC,EAAMkC,OACdG,QAASrC,EAAMqC,QACfF,SAZR,SAAsBa,GAClBA,EAAEC,iBAEFjD,EAAMiF,eAAe,CACjBzD,OAAQuD,EAAUG,QAAQ/B,UAS1B,2BAAOgC,IAAKJ,EAAWzB,aAAa,MAAMC,GAAG,aAAarC,KAAK,MAAMD,KAAK,OAAOmE,YAAY,qGACzF5F,UAAU,wCAAwCkE,UAAQ,IAC9D,0BAAMH,GAAG,mBAAmB/D,UAAU,+CCnBnC,SAAS6F,EAAcrF,GAAQ,IAAD,EACjBH,IAAM8C,SAAS,IADE,mBAClC1B,EADkC,KAC5B2B,EAD4B,OAEjB/C,IAAM8C,SAAS,IAFE,mBAElC3B,EAFkC,KAE5BsE,EAF4B,KAoBzC,OACI,kBAAC,EAAD,CAAehD,MAAM,gEAAcrB,KAAK,WAAWuB,OAAO,6CACtDN,OAAQlC,EAAMkC,OACdG,QAASrC,EAAMqC,QACfF,SAZR,SAAsBa,GAClBA,EAAEC,iBACFjD,EAAM2B,WAAW,CACbV,OACAD,WASA,2BAAOmC,MAAOlC,EAAMmC,SArB5B,SAA0BJ,GACtBJ,EAAQI,EAAEK,OAAOF,QAoBmCG,aAAa,MAAMC,GAAG,YAAYrC,KAAK,OAAOD,KAAK,OAAOmE,YAAY,mDAClH5F,UAAU,uCAAuCgE,UAAU,IAAIC,UAAU,KAAKC,UAAQ,IAC1F,0BAAMH,GAAG,kBAAkB/D,UAAU,2CACrC,2BAAO2D,MAAOnC,EAAMoC,SApB5B,SAA0BJ,GACtBsC,EAAQtC,EAAEK,OAAOF,QAmBmCG,aAAa,MAAMC,GAAG,WAAWrC,KAAK,MAAMD,KAAK,OAAOmE,YAAY,qGAChH5F,UAAU,wCAAwCkE,UAAQ,IAC9D,0BAAMH,GAAG,iBAAiB/D,UAAU,+CCoIjC+F,MAzJf,WAAgB,IAAD,EAE+C1F,IAAM8C,UAAS,GAF9D,mBAEN6C,EAFM,KAEkBC,EAFlB,OAG6C5F,IAAM8C,UAAS,GAH5D,mBAGN+C,EAHM,KAGiBC,EAHjB,OAIyC9F,IAAM8C,UAAS,GAJxD,mBAINiD,EAJM,KAIeC,EAJf,OAKmChG,IAAM8C,UAAS,GALlD,mBAKNmD,EALM,KAKYC,EALZ,OAM2BlG,IAAM8C,SAAS,IAN1C,mBAMNqD,EANM,KAMQC,EANR,OAOyBpG,IAAM8C,SAAS,IAPxC,mBAON1C,EAPM,KAOOiG,EAPP,OAQarG,IAAM8C,SAAS,IAR5B,mBAQNf,EARM,KAQCuE,EARD,KA4Eb,SAASC,IACPX,GAA0B,GAC1BE,GAAyB,GACzBE,GAAuB,GACvBE,GAAoB,GAuCtB,OA7GAlG,IAAMkD,WAAU,WACdY,EAAI0C,kBACDpC,MAAK,SAACqC,GACLH,EAASG,MAEVC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IA4BH3G,IAAMkD,WAAU,WACdY,EAAIgD,cACD1C,MAAK,SAACO,GACL0B,EAAe1B,MAEhB+B,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAmED,kBAAC5G,EAAmBgH,SAApB,CAA6BzD,MAAOlD,GAClC,yBAAKT,UAAU,OACb,yBAAKA,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEuB,YAtDV,SAAyBiF,GACvBC,EAAgBD,IAsDRjE,aA3DV,WACEgE,GAAqBD,IA2DbrE,cAxEV,WACEgE,GAA2BD,IAwEnBjE,aArEV,WACEoE,GAA0BD,IAqElB/D,WAlEV,WACEkE,GAAwBD,IAkEhBhE,MAAOA,EACPR,WAhHV,SAAwBhB,GAEtB,IAAMI,EAAUJ,EAAKK,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQL,EAAYK,OAG3DqD,EAAIkD,qBAAqBzG,EAAKE,KAAME,GACjCyD,MAAK,SAAC6C,GAEL,IAAMC,EAAWnF,EAAMC,KAAI,SAACmF,GAAD,OAAOA,EAAE1G,MAAQF,EAAKE,IAAMwG,EAAUE,KAEjEb,EAASY,MAEVR,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAoGRrF,aAhGV,SAA0Bf,GACxBuD,EAAIsD,WAAW7G,GACZ6D,MAAK,WACJ,IAAMiD,EAAiBtF,EAAMuF,QAAO,SAACxG,GAAD,OAAOA,IAAMP,KACjD+F,EAASe,SA6FP,kBAAC,EAAD,OAGF,kBAACxE,EAAD,CAAkBR,OAAQsD,EAAwBnD,QAAS+D,EAAgBlD,aAtDjF,SAA0BkE,GACxBzD,EAAI0D,aAAaD,GACdnD,MAAK,SAACO,GACL0B,EAAe1B,MAEhBP,MAAK,kBACJmC,OACDG,OAAM,SAACC,GACNC,QAAQC,IAAIF,SAgDZ,kBAACnB,EAAD,CAAenD,OAAQ0D,EAAqBvD,QAAS+D,EAAgBzE,WAhC3E,SAA8BvB,GAC5BuD,EAAI2D,WAAWlH,GACZ6D,MAAK,SAAC6C,GACLX,EAAS,GAAD,mBAAKvE,GAAL,CAAYkF,QAErB7C,MAAK,kBACJmC,OACDG,OAAM,SAACC,GACNC,QAAQC,IAAIF,SA0BZ,kBAAC,EAAD,CACEpG,KAAM4F,EACN9D,OAAQ4D,EACRzD,QAAS+D,IACX,kBAAC,EAAD,CAAe9D,MAAM,2DAAcrB,KAAK,iBAAiBuB,OAAO,iBAEhE,kBAACsC,EAAD,CAAiB5C,OAAQwD,EAAuBrD,QAAS+D,EAAgBnB,eApD/E,SAA4BzD,GAC1BmC,EAAI4D,aAAa/F,GACdyC,MAAK,SAACO,GACL0B,EAAe1B,MAEhBP,MAAK,kBACJmC,OACDG,OAAM,SAACC,GACNC,QAAQC,IAAIF,YCvGAgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnE,MAAK,SAAAoE,GACJA,EAAaC,gBAEd/B,OAAM,SAAAgC,GACL9B,QAAQ8B,MAAMA,EAAMC,a,kBEzI5BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.a588ac47.chunk.js","sourcesContent":["import React from 'react';\r\nimport headerLogo from '../images/logo.svg'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={headerLogo} alt=\"Лого Место\" className=\"header__logo\" />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName = (\r\n        `cards__delete-button ${isOwn ? 'cards__delete-button_active' : ''}`\r\n    );\r\n\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n    const cardLikeButtonClassName = (\r\n        `cards__like-button ${isLiked ? 'cards__like-button_active' : ''}`\r\n    );\r\n\r\n    function handleClick() {\r\n        props.onImageOpen();\r\n        props.onCardClick(props.card);\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card);\r\n    }\r\n\r\n    function handleDeleteClick() {\r\n        props.onCardDelete(props.card);\r\n    }\r\n\r\n    return (\r\n        <figure className=\"cards__item\">\r\n            <img\r\n                onClick={handleClick}\r\n                src={props.card.link}\r\n                alt={`${props.card.name}`}\r\n                className=\"cards__image\" />\r\n            <button type='button' onClick={handleDeleteClick} className={cardDeleteButtonClassName} />\r\n            <figcaption className=\"cards__name\">\r\n                <p className=\"cards__name-caption\">{props.card.name}</p>\r\n                <div className=\"cards__like\">\r\n                    <button type=\"button\" onClick={handleLikeClick} className={` ${cardLikeButtonClassName}`} />\r\n                    <p className=\"cards__like-counter\">{props.card.likes.length}</p>\r\n                </div>\r\n            </figcaption>\r\n        </figure>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n    \r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            <section className=\"profile\">\r\n                <button onClick={props.onEditAvatar} type=\"button\" className=\"profile__avatar-button\">\r\n                    <img src={currentUser.avatar} alt=\"Аватар\" className=\"profile__avatar\" />\r\n                </button>\r\n                <div className=\"profile__edit-info\">\r\n                    <div className=\"profile__info\">\r\n                        <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                        <button onClick={props.onEditProfile} type=\"button\" className=\"profile__edit-button\"></button>\r\n                    </div>\r\n                    <p className=\"profile__description\">{currentUser.about}</p>\r\n                </div>\r\n                <button onClick={props.onAddPlace} type=\"button\" className=\"profile__button\"></button>\r\n            </section>\r\n\r\n            <section className=\"cards\">\r\n                {props.cards.map((card) => (\r\n                    <Card\r\n                        key={card._id}\r\n                        card={card}\r\n                        onImageOpen={props.onImagePopup}\r\n                        onCardClick={props.onCardClick}\r\n                        onCardLike={props.onCardLike}\r\n                        onCardDelete={props.onCardDelete} />\r\n                ))}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__text\">&#169; 2020 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <section className={`popup popup_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\r\n            <form onSubmit={props.onSubmit} \r\n            name={props.name} className=\"popup__container\" noValidate>\r\n                <button onClick={props.onClose} type=\"reset\" className=\"popup__close-button\" />\r\n                <h2 className=\"popup__header\">{props.title}</h2>\r\n                {props.children}\r\n                <button type=\"submit\" className=\"popup__save-button\" \r\n                // popup__save-button_disabled\" \r\n                >{props.button}</button>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction PopupWithImage(props) {\r\n    return (\r\n        <section className={`popup popup_image_open ${props.isOpen ? 'popup_opened' : ''}`}>\r\n            <figure className=\"popup__image-container\">\r\n                <button onClick={props.onClose} className=\"popup__close-button popup__close-button_image_close\" />\r\n                <img className=\"popup__image\"\r\n                    src={`${props.card.link}`}\r\n                    alt={props.card.name} />\r\n                <figcaption className=\"popup__caption\">{props.card.name}</figcaption>\r\n            </figure>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PopupWithImage;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nexport default function EditProfilePopup(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    function handleChangeDescription(e) {\r\n        setDescription(e.target.value)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onUpdateUser({\r\n            name,\r\n            about: description,\r\n        });\r\n    }\r\n\r\n    // console.log(props.onEditAvatar)\r\n\r\n    React.useEffect(() => {\r\n        if (currentUser !== '') {\r\n            setName(currentUser.name);\r\n            setDescription(currentUser.about);\r\n        }\r\n    }, [currentUser]);\r\n\r\n    return (\r\n        <PopupWithForm title='Редактировать профиль' name=\"profile_edit\" button='Сохранить'\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit} >\r\n            <input value={name} onChange={handleChangeName} autoComplete=\"off\" id=\"user-name\" type=\"text\" name=\"userName\" className=\"popup__input popup__input_value_name\"\r\n                minLength=\"2\" maxLength=\"40\" required />\r\n            <span id=\"user-name-error\" className=\"popup__error popup__error_position_top\"></span>\r\n            <input value={description} onChange={handleChangeDescription} autoComplete=\"off\" id=\"user-description\" type=\"text\" name=\"userDescription\"\r\n                className=\"popup__input popup__input_value_description\" minLength=\"2\" maxLength=\"200\" required />\r\n            <span id=\"user-description-error\" className=\"popup__error popup__error_position_bottom\"></span>\r\n        </PopupWithForm>\r\n    )\r\n}","class Api {\r\n    constructor({ baseUrl, headers = {} }) {\r\n        this.url = baseUrl;\r\n        this.headers = headers;\r\n    }\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this.url}/cards`, {\r\n            headers: this.headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    getInfoUser() {\r\n        return fetch(`${this.url}/users/me`, {\r\n            headers: this.headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    sendInfoUser(data) {\r\n        return fetch(`${this.url}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.about\r\n            })\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    createCard(data) {\r\n        return fetch(`${this.url}/cards`, {\r\n            method: 'POST',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                link: data.link\r\n            })\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    removeCard(data) {\r\n        return fetch(`${this.url}/cards/${data._id}`, {\r\n            method: 'DELETE',\r\n            headers: this.headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    // setLike(data) {\r\n    //     return fetch(`${this.url}/cards/likes/${data._id}`, {\r\n    //         method: 'PUT',\r\n    //         headers: this.headers\r\n    //     })\r\n    //         .then(res => {\r\n    //             if (res.ok) {\r\n    //                 return res.json();\r\n    //             }\r\n    //             return Promise.reject(`Ошибка: ${res.status}`);\r\n    //         });\r\n    // }\r\n\r\n    // removeLike(data) {\r\n    //     return fetch(`${this.url}/cards/likes/${data._id}`, {\r\n    //         method: 'DELETE',\r\n    //         headers: this.headers\r\n    //     })\r\n    //         .then(res => {\r\n    //             if (res.ok) {\r\n    //                 return res.json();\r\n    //             }\r\n    //             return Promise.reject(`Ошибка: ${res.status}`);\r\n    //         });\r\n    // }\r\n\r\n    changeLikeCardStatus(id, isLiked) {\r\n        return fetch(`${this.url}/cards/likes/${id}`, {\r\n            method: `${isLiked ? 'PUT' : 'DELETE'}`,\r\n            headers: this.headers\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n\r\n    changeAvatar(data) {\r\n        return fetch(`${this.url}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                avatar: data.avatar\r\n            })\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`);\r\n            });\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-13',\r\n    headers: {\r\n        authorization: 'dc1735db-20ec-4583-a516-d92fba380f3a',\r\n        'Content-Type': 'application/json'\r\n    }\r\n});\r\n\r\nexport default api;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nexport default function EditAvatarPopup(props) {\r\n\r\n    const avatarRef = React.useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.onUpdateAvatar({\r\n            avatar: avatarRef.current.value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm title='Обновить аватар' name=\"avatar_edit\" button='Сохранить'\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}>\r\n            <input ref={avatarRef} autoComplete=\"off\" id=\"avatar-url\" type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\"\r\n                className=\"popup__input popup__input_place_image\" required />\r\n            <span id=\"avatar-url-error\" className=\"popup__error popup__error_position_bottom\"></span>\r\n        </PopupWithForm>\r\n    )\r\n}","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nexport default function AddPlacePopup(props) {\r\n    const [name, setName] = React.useState('');\r\n    const [link, setLink] = React.useState('');\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value)\r\n    }\r\n\r\n    function handleChangeLink(e) {\r\n        setLink(e.target.value)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.onAddPlace({\r\n            name,\r\n            link\r\n        })\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm title='Новое место' name=\"card_add\" button='Создать'\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}>\r\n            <input value={name} onChange={handleChangeName} autoComplete=\"off\" id=\"card-name\" type=\"text\" name=\"name\" placeholder=\"Название\"\r\n                className=\"popup__input popup__input_place_name\" minLength=\"1\" maxLength=\"30\" required />\r\n            <span id=\"card-name-error\" className=\"popup__error popup__error_position_top\"></span>\r\n            <input value={link} onChange={handleChangeLink} autoComplete=\"off\" id=\"card-url\" type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\"\r\n                className=\"popup__input popup__input_place_image\" required />\r\n            <span id=\"card-url-error\" className=\"popup__error popup__error_position_bottom\"></span>\r\n        </PopupWithForm>\r\n    )\r\n}","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm'\nimport PopupWithImage from './PopupWithImage'\nimport EditProfilePopup from './EditProfilePopup'\nimport api from '../utils/api'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState('');\n  const [currentUser, setCurrentUser] = React.useState('');\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api.getInitialCards()\n      .then((result) => {\n        setCards(result)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        // Обновляем стейт\n        setCards(newCards)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card)\n      .then(() => {\n        const arrWithoutCard = cards.filter((i) => i !== card);\n        setCards(arrWithoutCard);\n      })\n\n  }\n\n  React.useEffect(() => {\n    api.getInfoUser()\n      .then((data) => {\n        setCurrentUser(data)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n\n  function handleImagePopupclick() {\n    setIsImagePopupOpen(!isImagePopupOpen);\n  }\n\n  function handleCardClick(selectedCard) {\n    setSelectedCard(selectedCard);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n  }\n\n  function handleUpdateUser(user) {\n    api.sendInfoUser(user)\n      .then((data) => {\n        setCurrentUser(data)\n      })\n      .then(() =>\n        closeAllPopups())\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  function handleUpdateAvatar(avatar) {\n    api.changeAvatar(avatar)\n      .then((data) => {\n        setCurrentUser(data)\n      })\n      .then(() =>\n        closeAllPopups())\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleAddPlaceSubmit(card) {\n    api.createCard(card)\n      .then((newCard) => {\n        setCards([...cards, newCard])\n      })\n      .then(() =>\n        closeAllPopups())\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"App\">\n        <div className=\"page\">\n          <Header />\n          <Main\n            onCardClick={handleCardClick}\n            onImagePopup={handleImagePopupclick}\n            onEditProfile={handleEditProfileClick}\n            onEditAvatar={handleEditAvatarClick}\n            onAddPlace={handleAddPlaceClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete} />\n          <Footer />\n        </div>\n\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\n\n        <PopupWithImage\n          card={selectedCard}\n          isOpen={isImagePopupOpen}\n          onClose={closeAllPopups} />\n        <PopupWithForm title='Вы уверены?' name=\"delete_confirm\" button='Да' />\n\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n      </div >\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}